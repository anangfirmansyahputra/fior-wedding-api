// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  access_token  String? @db.Text
  refresh_token String? @db.Text

  @@map("users")
}

model Customer {
  id String @id @default(uuid())

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  customer_biodata CustomerBiodata[]
  event            Event[]

  @@map("customers")
}

model CustomerBiodata {
  id           String  @id @default(uuid())
  first_name   String
  last_name    String?
  email        String
  phone_number String
  address      String

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  customer_id String

  customer Customer @relation(fields: [customer_id], references: [id])

  @@map("customer_biodatas")
}

model VendorCategory {
  id          Int    @id
  name        String
  status      String
  slug        String
  description String @db.Text
  imageUrl    String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("vendor_categories")
}

model Vendor {
  id           Int           @id
  data         Json
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  name         String
  category     String
  city         String
  event_vendor EventVendor[]

  @@map("vendors")
}

model Cities {
  id         Int    @id
  country_id Int
  name       String
  slug       String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("cities")
}

model Event {
  id String @id @default(uuid())

  customer_id String

  customer            Customer            @relation(fields: [customer_id], references: [id])
  event_vendor        EventVendor[]
  event_payment       EventPayment[]
  event_tasK_timeline EventTaskTimeline[]
  checklist_support   ChecklistSupport[]
  checklist_holmat    ChecklistHolmat[]
  event_budget        EventBudget[]
  event_rundown       EventRundown[]
  event_guest_seat    EventGuestSeat[]
  event_room_list     EventRoomList[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("events")
}

model EventVendor {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  vendor_id Int
  vendor    Vendor @relation(fields: [vendor_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_vendors")
}

model EventPayment {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_payments")
}

model EventTaskTimeline {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_task_timelines")
}

model ChecklistSupport {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("checklist_supports")
}

model ChecklistHolmat {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("checklist_holmats")
}

model EventBudget {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_budgets")
}

model EventRundown {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_rundowns")
}

model EventGuestSeat {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_guest_seats")
}

model EventRoomList {
  id String @id @default(uuid())

  event_id String
  event    Event  @relation(fields: [event_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("event_room_lists")
}
